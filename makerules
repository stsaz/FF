# FF makerules for GNU make

# FF := .
FF_OBJ_DIR := ./ff-obj
override FF_CFLAGS += \
	-Wall -Wextra -Wpointer-arith -Wno-unused-parameter \
	-I$(FF) -I$(FF)-3pt -I$(FFOS)
FF_CFLAGS_EX := -Wno-implicit-fallthrough

ifeq ($(LD),clang)
override FFOS_CFLAGS += -Wno-missing-field-initializers
endif

# FFOS
FFOS_OBJ_DIR := $(FF_OBJ_DIR)
include $(FFOS)/makerules
FF_ALL_OBJ := $(FFOS_OBJ)


FF_SRC := $(FF)/FF/ffcrc.c \
	$(FF)/FF/ffarray.c \
	$(FF)/FF/ffhashtab.c \
	$(FF)/FF/ffring.c \
	$(FF)/FF/fflist.c \
	$(FF)/FF/ffnumber.c \
	$(FF)/FF/ffpath.c \
	$(FF)/FF/ffrbtree.c \
	$(FF)/FF/ffs-regex.c \
	$(FF)/FF/ffstring.c \
	$(FF)/FF/fftime.c

FF_HDR := $(FFOS_HDR) $(wildcard $(FF)/FF/*.h)

# FF_OBJ=$(FF_SRC:.c=.o)
FF_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_SRC)))))
FF_ALL_OBJ += $(FF_OBJ)

$(FF_OBJ_DIR)/%.o: $(FF)/FF/%.c $(FF_HDR)
	$(C) $(FF_CFLAGS)  $< -o$@


# sys
FF_SYS_HDR := $(wildcard $(FF)/FF/sys/*.h)
FF_SYS_SRC := $(wildcard $(FF)/FF/sys/*.c)
FF_SYS_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_SYS_SRC)))))
FF_ALL_OBJ += $(FF_SYS_OBJ)
FF_OBJ += $(FF_OBJ_DIR)/ffsys.o
$(FF_OBJ_DIR)/%.o: $(FF)/FF/sys/%.c $(FF_HDR)
	$(C) $(FF_CFLAGS)  $< -o$@

ifeq ($(OS),win)
FFOS_WREG += $(FF_OBJ_DIR)/ffwreg2.o
endif


# data
FF_DATA_HDR := $(wildcard $(FF)/FF/data/*.h)
FF_DATA_SRC := $(wildcard $(FF)/FF/data/*.c)
FF_DATA_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_DATA_SRC)))))
FF_ALL_OBJ += $(FF_DATA_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/data/%.c $(FF_HDR)
	$(C) $(FF_CFLAGS) $(FF_CFLAGS_EX)  $< -o$@


# pack
FF_PACK_HDR := $(wildcard $(FF)/FF/pack/*.h)
FF_PACK_SRC := $(wildcard $(FF)/FF/pack/*.c)
FF_PACK_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_PACK_SRC)))))
FF_ALL_OBJ += $(FF_PACK_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/pack/%.c $(FF_HDR) $(FF_PACK_HDR)
	$(C) $(FF_CFLAGS) $(FF_CFLAGS_EX)  $< -o$@


# net
FF_NET_HDR := $(wildcard $(FF)/FF/net/*.h)
FF_NET_SRC := $(wildcard $(FF)/FF/net/*.c)
FF_NET_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_NET_SRC)))))
FF_ALL_OBJ += $(FF_NET_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/net/%.c $(FF_HDR) $(FF_NET_HDR)
	$(C) $(FF_CFLAGS) $(FF_CFLAGS_EX)  $< -o$@


# audio
FF_AUDIO_HDR := $(wildcard $(FF)/FF/audio/*.h) \
	$(wildcard $(FF)/FF/aformat/*.h) \
	$(wildcard $(FF)/FF/mformat/*.h) \
	$(wildcard $(FF)/FF/avformat/*.h)
FF_AUDIO_SRC := $(wildcard $(FF)/FF/audio/*.c) \
	$(wildcard $(FF)/FF/aformat/*.c) \
	$(wildcard $(FF)/FF/avformat/*.c) \
	$(wildcard $(FF)/FF/mformat/*.c)
FF_ALL_OBJ += $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_AUDIO_SRC)))))
$(FF_OBJ_DIR)/%.o: $(FF)/FF/audio/%.c $(FF_HDR) $(FF_AUDIO_HDR)
	$(C) $(FF_CFLAGS) $(FF_CFLAGS_EX)  $< -o$@
$(FF_OBJ_DIR)/%.o: $(FF)/FF/aformat/%.c $(FF_HDR) $(FF_AUDIO_HDR)
	$(C) $(FF_CFLAGS) $(FF_CFLAGS_EX)  $< -o$@
$(FF_OBJ_DIR)/%.o: $(FF)/FF/mformat/%.c $(FF_HDR) $(FF_AUDIO_HDR)
	$(C) $(FF_CFLAGS) $(FF_CFLAGS_EX)  $< -o$@


# adev
FF_ADEV_HDR := $(wildcard $(FF)/FF/adev/*.h)
FF_ADEV_SRC := $(wildcard $(FF)/FF/adev/*.c)
FF_ADEV_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_ADEV_SRC)))))
FF_ALL_OBJ += $(FF_ADEV_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/adev/%.c $(FF_HDR) $(FF_ADEV_HDR)
	$(C) $(FF_CFLAGS)  $< -o$@


# mtags
FF_MTAGS_HDR := $(wildcard $(FF)/FF/mtags/*.h)
FF_MTAGS_SRC := $(wildcard $(FF)/FF/mtags/*.c)
FF_MTAGS_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_MTAGS_SRC)))))
FF_ALL_OBJ += $(FF_MTAGS_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/mtags/%.c $(FF_HDR) $(FF_MTAGS_HDR)
	$(C) $(FF_CFLAGS) $(FF_CFLAGS_EX)  $< -o$@


# pic
FF_PIC_HDR := $(wildcard $(FF)/FF/pic/*.h)
FF_PIC_SRC := $(wildcard $(FF)/FF/pic/*.c)
FF_PIC_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_PIC_SRC)))))
FF_ALL_OBJ += $(FF_PIC_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/pic/%.c $(FF_HDR) $(FF_PIC_HDR)
	$(C) $(FF_CFLAGS)  $< -o$@


# DB
FF_DB_HDR := $(wildcard $(FF)/FF/db/*.h)
FF_DB_SRC := $(wildcard $(FF)/FF/db/*.c)
FF_DB_OBJ := $(addprefix $(FF_OBJ_DIR)/, $(addsuffix .o, $(notdir $(basename $(FF_DB_SRC)))))
FF_ALL_OBJ += $(FF_DB_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/db/%.c $(FF_HDR) $(FF_DB_HDR)
	$(C) $(FF_CFLAGS)  $< -o$@


# GUI
FF_GUI_HDR := $(wildcard $(FF)/FF/gui/*.h) \
	$(wildcard $(FF)/FF/gui-gtk/*.h)
FF_GUI_OBJ := \
	$(FF_OBJ_DIR)/ffgui-loader.o \
	$(FF_OBJ_DIR)/ffgui-winapi.o \
	$(FF_OBJ_DIR)/ffgui-winapi-ev.o \
	$(FF_OBJ_DIR)/ffsys-win.o
FF_ALL_OBJ += $(FF_GUI_OBJ)
$(FF_OBJ_DIR)/%.o: $(FF)/FF/gui/%.c $(FF_HDR) $(FF_GUI_HDR)
	$(C) $(FF_CFLAGS)  $< -o$@

CFLAGS_GTK := -I/usr/lib64/glib-2.0/include \
	-I/usr/include/glib-2.0/ \
	-I/usr/include/gtk-3.0 \
	-I/usr/include/pango-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/gdk-pixbuf-2.0 \
	-I/usr/include/atk-1.0
$(FF_OBJ_DIR)/%.o: $(FF)/FF/gui-gtk/%.c $(FF_HDR) $(FF_GUI_HDR)
	$(C) $(FF_CFLAGS) $(CFLAGS_GTK)  $< -o$@


ifeq ($(OS),win)
FF_ALL_OBJ += $(FF_OBJ_DIR)/ffwohandler.o
endif


ff: $(FF_OBJ_DIR) $(FFOS_OBJ) $(FF_OBJ)

$(FF_OBJ_DIR):
	mkdir -p $(FF_OBJ_DIR)

ffclean:
	rm -vfr $(FF_ALL_OBJ)
	rmdir -v $(FF_OBJ_DIR)
